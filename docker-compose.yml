version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: weatherdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  satellite-producer:
    build: ./producer/Satellite
    volumes:
      - ./producer/Satellite:/app
    working_dir: /app
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    dns:
      - 8.8.8.8
      - 8.8.4.4
    command: ["/entrypoint.sh"]

  weather-producer:
    build: ./producer/Weather
    volumes:
      - ./producer/Weather:/app
    working_dir: /app
    depends_on:
      - kafka
    environment:
      API_KEY: ${API_KEY}
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      DEFAULT_LOCATION: ${DEFAULT_LOCATION}
    command: ["/entrypoint.sh"]

  satellite-consumer:
    build: ./consumer/Satellite
    volumes:
      - ./consumer/Satellite:/app
    working_dir: /app
    depends_on:
      - kafka
      - minio
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET: satellite-images
    command: ["sh", "-c", "sleep 10 && python consumer.py"]

  weather-consumer:
    build: ./consumer/Weather
    volumes:
      - ./consumer/Weather:/app
    working_dir: /app
    depends_on:
      - kafka
      - postgres
    environment:
      KAFKA_SERVER: kafka:9092
      POSTGRES_HOST: postgres
      POSTGRES_DB: weatherdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    command: ["/entrypoint.sh"]

volumes:
  minio-data:
  pgdata: